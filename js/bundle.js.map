{"version":3,"sources":["webpack://first-site/./src/js/auth/checkLoggied.js","webpack://first-site/./src/js/auth/displayAuthBlock.js","webpack://first-site/./src/js/auth/passSingIn.js","webpack://first-site/./src/js/auth/passSingUp.js","webpack://first-site/./src/js/cartHearderBlock.js","webpack://first-site/./src/js/changeCartBlock.js","webpack://first-site/./src/js/displayMessage.js","webpack://first-site/./src/js/gridGoods.js","webpack://first-site/./src/js/helpers.js","webpack://first-site/./src/js/removeItemFromCart.js","webpack://first-site/./src/js/tableCart.js","webpack://first-site/./src/js/tableOrder.js","webpack://first-site/./src/js/toolsShopApi.js","webpack://first-site/./src/js/updateQuantityItem.js","webpack://first-site/webpack/bootstrap","webpack://first-site/webpack/runtime/define property getters","webpack://first-site/webpack/runtime/hasOwnProperty shorthand","webpack://first-site/webpack/runtime/make namespace object","webpack://first-site/./src/js/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAiD;AACN;AACa;AAChB;;AAEjC,YAAY,oDAAU;;AAEd;AACf,2BAA2B,kDAAY;;AAEvC;AACA;AACA,aAAa,oCAAoC;AACjD;AACA,QAAQ,qEAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kBAAkB;AACzE,6DAA6D,kBAAkB;AAC/E,8DAA8D,cAAc;AAC5E;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,QAAQ,yDAAe;AACvB;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;ACjCsD;AACX;;AAEpC;;AAEA;AACP,2BAA2B,kDAAY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA;AACA;AACA;;AAEA;AACA,IAAI,sDAAY;AAChB,gCAAgC,mBAAmB;AACnD;AACA,IAAI,oDAAU;AACd,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnCwC;AACxC;AAC2C;AACM;AACO;;AAEzC;AACf,2BAA2B,kDAAY;;AAEvC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,mCAAmC;AAChD;AACA;AACA,OAAO;AACP;AACA,UAAU,qEAAkB;AAC5B;AACA;AACA,UAAU,yDAAe;AACzB,sCAAsC,kBAAkB;AACxD,qCAAqC,MAAM;AAC3C,UAAU,oDAAU;AACpB,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;AC7C2C;;AAE5B;AACf,2BAA2B,kDAAY;AACvC,SAAS,2BAA2B;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8EAA8E,WAAW;AACzF;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;AC7Fe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;;;;;;;;;;;;;;;ACZe;AACf;AACA,8BAA8B,MAAM;AACpC;AACA,wCAAwC,EAAE,MAAM;;AAEhD;AACA,C;;;;;;;;;;;;;;;ACNe;AACf;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;ACN0C;AACM;AACJ;;AAE7B;AACf,2BAA2B,kDAAY;;AAEvC;AACA;;AAEA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA,4CAA4C,EAAE,MAAM;AACpD;AACA,yCAAyC,GAAG;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,qDAAK;AACnB,oCAAoC,qDAAK;AACzC,qBAAqB,oCAAoC;AACzD;AACA;AACA;AACA;AACA,0BAA0B,qDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yBAAyB;AACtE,iBAAiB;AACjB;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA,4CAA4C,iCAAiC,SAAS,KAAK;AAC3F;AACA;AACA,kBAAkB,yDAAe;AACjC;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;;;;;;;AC9EO;AACP;AACA;;AAEO;AACP;AACA,0CAA0C;;AAE1C,iBAAiB,oBAAoB;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA,eAAe;;AAEf;AACA;AACA;AACA,MAAM;AACN,MAAM;AACN,MAAM;AACN;AACA;;;;;;;;;;;;;;;;;AClCuC;AACS;;AAEjC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,OAAO;AACnB;AACA;AACA,QAAQ,oDAAU;AAClB;AACA,0CAA0C,EAAE,MAAM;AAClD;AACA;AACA,MAAM,yDAAe;AACrB,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;AC3B0C;AACM;AACJ;AACL;AACO;AACQ;AACA;;AAEvC;AACf,2BAA2B,kDAAY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL,QAAQ,qDAAK;AACb,8BAA8B,qDAAK;AACnC,eAAe,8CAA8C;AAC7D;AACA;AACA,yBAAyB,qDAAK;AAC9B;AACA;AACA;AACA;AACA,UAAU,yDAAe;AACzB;AACA,YAAY,wDAAc;AAC1B,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA,gDAAgD,EAAE,MAAM;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA,kBAAkB,4DAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA,iDAAiD,EAAE,SAAS;AAC5D,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,kBAAkB,4DAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA,iDAAiD,EAAE,SAAS;AAC5D,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,oBAAoB,4DAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB,4DAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kBAAkB,oDAAU;AAC5B,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,OAAO;AACP,KAAK;AACL,MAAM,wDAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3M0C;AACE;AACL;AACO;;AAE/B;AACf,2BAA2B,kDAAY;;AAEvC,MAAM,qDAAK;AACX;;AAEA,4BAA4B,qDAAK;AACjC,aAAa,iCAAiC;AAC9C;AACA;AACA,uBAAuB,qDAAK;AAC5B;AACA;AACA;AACA,UAAU,wDAAc;AACxB,SAAS;AACT,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA,uBAAuB,EAAE,MAAM;AAC/B;AACA,uBAAuB,EAAE,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA,gDAAgD,EAAE,eAAe;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kBAAkB,oDAAU;AAC5B,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;ACzFe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc,EAAE,IAAI;;AAExD;AACA,yCAAyC,IAAI,YAAY,gBAAgB;AACzE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,GAAG;AACxC;;AAEA;AACA,kCAAkC,cAAc,EAAE,IAAI;;AAEtD;AACA,yCAAyC,IAAI,YAAY,gBAAgB;AACzE;;AAEA;AACA;;AAEA;AACA,6CAA6C,MAAM;AACnD;;AAEA;AACA,kCAAkC,cAAc,QAAQ,GAAG;AAC3D;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA,iCAAiC,GAAG,YAAY,gBAAgB;AAChE;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA,0CAA0C;AAC1C,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzEgD;;AAEjC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,OAAO;AACnB,iCAAiC,SAAS;AAC1C,0CAA0C,EAAE,MAAM;AAClD;AACA;AACA,MAAM,yDAAe;AACrB,KAAK;AACL;;;;;;;UCvBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNuD;AACR;AACJ;AACA;AACD;AACA;AACE;;AAE5C;;AAEA,EAAE,0DAAqB;AACvB,EAAE,2DAAY;AACd,EAAE,yDAAU;AACZ,EAAE,yDAAU;AACZ,EAAE,mDAAe;AACjB,EAAE,mDAAe;AACjB,EAAE,oDAAgB;;AAElB,CAAC","file":"bundle.js","sourcesContent":["import changeCartBlock from \"../changeCartBlock\";\nimport ToolsShopApi from \"../toolsShopApi\";\nimport { displayLogoutBlock } from \"./displayAuthBlock\";\nimport { readCookie } from \"../helpers\";\n\nexport let login = readCookie(\"email\");\n\nexport default function checkLoggied() {\n  const toolsShopApi = new ToolsShopApi();\n\n  if (login) {\n    toolsShopApi.checkEmail(login).then(([user]) => {\n      const { id, email, isLoggied, cart, total } = user;\n      if (typeof user != \"undefined\" && email === login && isLoggied === true) {\n        displayLogoutBlock(email, id);\n        let cartItems = 0;\n        cart.forEach(item => {\n          cartItems += item.quantity;\n          toolsShopApi.getGoods().then(goods => {\n            let goodCart = goods.find((good) => good.id === item.id);\n            const goodCartIndex = goods.findIndex((good) => good.id === item.id);\n            if (goodCart && document.getElementById(`${goodCartIndex + 1}`)) {\n              let btnIsGoodCart = document.getElementById(`${goodCartIndex + 1}`);\n              btnIsGoodCart.nextElementSibling.innerHTML = `${item.quantity}`;\n              btnIsGoodCart.textContent = \"Added to Cart\";\n              btnIsGoodCart.classList.add(\"good_item_added\");\n            }\n          })\n        });\n        changeCartBlock(cartItems, total);\n      }\n    });\n  }\n}\n","import { deleteCookie, reloadPage } from \"../helpers\";\nimport ToolsShopApi from '../toolsShopApi';\n\nexport const headerLogin = document.querySelector(\".header__login\");\n\nexport function displayLogoutBlock(login, id) {\n  const toolsShopApi = new ToolsShopApi();\n\n  headerLogin.style.display = \"none\";\n  let div = document.createElement(\"div\");\n  div.classList.add(\"header__logout\");\n  let span = document.createElement(\"span\");\n  let btn = document.createElement(\"button\");\n  let pOrders = document.createElement(\"p\");\n  let cartHeader = document.querySelector(\".header__cart\");\n  cartHeader.before(div);\n  div.append(span);\n  span.textContent = `${login}`;\n  div.append(btn);\n  btn.textContent = \"Sing Out\";\n  pOrders.innerHTML = `<a href=\"orders.html\">Your Orders</a>`;\n  div.append(pOrders);\n\n  btn.addEventListener(\"click\", () => {\n    deleteCookie(\"email\");\n    toolsShopApi.patchData(id, { isLoggied: false });\n    displayLoginBlock();\n    reloadPage();\n  });\n}\n\nexport function displayLoginBlock() {\n  let headerLogout = document.querySelector(\".header__logout\");\n  headerLogin.style.display = \"\";\n  headerLogout.remove();\n}\n","import { reloadPage } from \"../helpers\";\n// import checkEmailField from \"./checkEmailField\";\nimport ToolsShopApi from \"../toolsShopApi\";\nimport changeCartBlock from \"../changeCartBlock\";\nimport { displayLogoutBlock } from \"./displayAuthBlock\";\n\nexport default function passSingIn() {\n  const toolsShopApi = new ToolsShopApi();\n\n  // const inputEmail = document.querySelectorAll(\".header__login_input\")[0];\n  const formLogin = document.forms[0];\n\n  // inputEmail.addEventListener(\"blur\", () => checkEmailField(inputEmail));\n\n  formLogin.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    let emailEntered = formLogin.elements.login.value;\n    let passwordEntered = formLogin.elements.password.value;\n\n    if (emailEntered === \"\" || passwordEntered === \"\") {\n      alert(\"Fill in the fields\");\n      return false;\n    }\n\n    toolsShopApi.checkEmail(emailEntered).then(([user]) => {\n      const { id, email, password, cart, total } = user;\n      if (typeof user == \"undefined\") {\n        alert(\"User with this E-mail does not exist\");\n      } else {\n        if (password === passwordEntered) {\n          displayLogoutBlock(email, id);\n          let cartItems = 0;\n          cart.forEach(item => cartItems += item.quantity);\n          changeCartBlock(cartItems, total);\n          toolsShopApi.patchData(id, { isLoggied: true });\n          document.cookie = `email=${email}`;\n          reloadPage();\n        } else {\n          alert(\"Wrong password entered\");\n        }\n      }\n    });\n  });\n\n  return null;\n}\n","import ToolsShopApi from \"../toolsShopApi\";\n\nexport default function passSingUp() {\n  const toolsShopApi = new ToolsShopApi();\n  const { checkEmail, postUserData } = toolsShopApi;\n\n  const form = document.getElementById(\"registration-form\");\n  const container = document.getElementById(\"registration-form-container\");\n\n  function showCover() {\n    let coverDiv = document.createElement(\"div\");\n    coverDiv.id = \"cover-div\";\n    document.body.style.overflowY = \"hidden\";\n    document.body.append(coverDiv);\n    container.style.display = \"block\";\n  }\n\n  function hideCover() {\n    document.getElementById(\"cover-div\").remove();\n    document.body.style.overflowY = \"\";\n    container.style.display = \"none\";\n    document.onkeydown = null;\n  }\n\n  document.getElementById(\"show-register\").addEventListener(\"click\", () => {\n    showCover();\n    form.elements.login.focus();\n    // form.elements.login.onblur = checkEmailField;\n\n    form.addEventListener('submit', () => {\n      let valueLogin = form.login.value;\n      let valuePassword = form.password.value;\n\n      if (valueLogin === \"\" || valuePassword === \"\") {\n        alert(\"Fill in the fields\");\n        return false;\n      }\n\n      let newUser = {\n        id: Date.now(),\n        email: valueLogin,\n        password: valuePassword,\n        cart: [],\n        currentOrders: [],\n        completedOrders: [],\n        totalOrders: [],\n        total: 0,\n        isLoggied: false,\n      };\n\n      checkEmail(valueLogin).then(([user]) => {\n        if (user && user.email === valueLogin) {\n          alert(\"User with this E-mail does exist\");\n        } else {\n          postUserData(newUser).then((user) =>\n            alert(\n              `You are registered! Sign in to your account using your email ${user.email}`\n            )\n          );\n        }\n      });\n\n      hideCover();\n      return false;\n    });\n\n    form.cancel.addEventListener('click', () => hideCover());\n\n    document.addEventListener('keydown', e => {\n      if (e.key === \"Escape\") {\n        hideCover();\n      }\n    });\n\n    let lastElem = form.elements[form.elements.length - 1];\n    let firstElem = form.elements[0];\n\n    lastElem.addEventListener('keydown', (e) => {\n      if (e.key === \"Tab\" && !e.shiftKey) {\n        firstElem.focus();\n        return false;\n      }\n    });\n\n    firstElem.addEventListener('keydown', (e) => {\n      if (e.key === \"Tab\" && e.shiftKey) {\n        lastElem.focus();\n        return false;\n      }\n    });\n  });\n\n  return null;\n}\n","export default function createCartHeaderBlock() {\n  const headerCart = document.querySelector(\".header__cart\");\n  let spanCart = document.createElement(\"span\");\n  let pTotal = document.createElement(\"p\");\n  pTotal.classList.add(\".header__cart_total\");\n  pTotal.style.fontWeight = \"bold\";\n  headerCart.append(spanCart);\n  headerCart.append(pTotal);\n  spanCart.innerHTML = `<a href=\"cart.html\"><i class=\"fas fa-shopping-cart\"> 0 items</i></a>`;\n  pTotal.innerHTML = `Total: &euro;0`;\n\n  return null;\n}\n","export default function changeCartBlock(count, total) {\n    let countItems = document.querySelector('.fa-shopping-cart');\n    countItems.innerHTML = `${count} items`;\n    let totalCart = document.querySelector('.header__cart p');\n    totalCart.innerHTML = `Total: &euro;${total}`;\n\n    return null;\n}","\nexport default function displayMessage(text, selector, elem) {\n    let message = document.createElement(\"p\");\n    message.classList.add(selector);\n    message.textContent = text;\n    elem.append(message);\n}","import ToolsShopApi from \"./toolsShopApi\";\nimport changeCartBlock from \"./changeCartBlock\";\nimport { login } from \"./auth/checkLoggied\";\n\nexport default function createGridGoods() {\n  const toolsShopApi = new ToolsShopApi();\n\n  if (document.getElementById(\"grid\")) {\n    const goodsGrid = document.getElementById(\"grid\");\n\n    toolsShopApi.getGoods().then((goods) => {\n      goods.map((item) => {\n        const { id, title, image, price } = item;\n        let div = document.createElement(\"div\");\n        div.classList.add(\"goods_item\");\n        let imageItem = document.createElement(\"img\");\n        imageItem.setAttribute(\"src\", image);\n        imageItem.setAttribute(\"alt\", title);\n        let titleItem = document.createElement(\"span\");\n        titleItem.textContent = `${title}`;\n        let priceItem = document.createElement(\"p\");\n        priceItem.innerHTML = `Price: &euro;${price}`;\n        let btnAddCart = document.createElement(\"button\");\n        btnAddCart.setAttribute('id', `${id}`);\n        btnAddCart.textContent = \"Add to Cart\";\n        let countItem = document.createElement(\"span\");\n        countItem.classList.add('goods_item_count');\n        countItem.textContent = '';\n\n        div.append(imageItem);\n        div.append(titleItem);\n        div.append(priceItem);\n        div.append(btnAddCart);\n        div.append(countItem);\n        goodsGrid.append(div);\n\n        btnAddCart.addEventListener(\"click\", () => {\n          if (login) {\n            toolsShopApi.checkEmail(login).then(([user]) => {\n              const { id, email, isLoggied, cart, total } = user;\n              let newCart = [...cart];\n              let newTotal = total;\n              if (\n                typeof user != \"undefined\" &&\n                email === login &&\n                isLoggied === true\n              ) {\n                let good = cart.find(el => el.id === item.id);\n                const goodIndex = cart.findIndex((el) => el.id === item.id);\n                if (good) {\n                  cart[goodIndex].quantity += 1;\n                  countItem.textContent = `${cart[goodIndex].quantity}`;\n                } else {\n                  item.quantity = 1;\n                  countItem.textContent = `${item.quantity}`;\n                  newCart = [...newCart, item];\n                }\n                newTotal += price;\n                toolsShopApi.patchData(id, { cart: newCart, total: newTotal }).then(({cart}) => {\n                  let cartItems = 0;\n                  cart.forEach(item => cartItems += item.quantity);\n                  changeCartBlock(cartItems, newTotal);\n                  btnAddCart.textContent = \"Added to Cart\";\n                  btnAddCart.classList.add(\"good_item_added\");\n                });\n              } else {\n                alert(\"You are not logged in!\");\n              }\n            });\n          } else {\n            alert(\"You are not logged in!\");\n          }\n        });\n      });\n    });\n  }\n\n  return null;\n}\n","export function reloadPage() {\n  window.location.reload();\n}\n\nexport function readCookie(name) {\n  const searchName = name + \"=\";\n  const cookies = document.cookie.split(\";\");\n\n  for (let i = 0; i < cookies.length; i++) {\n    let c = cookies[i];\n\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1, c.length);\n    }\n\n    if (c.indexOf(searchName) === 0) {\n      return c.substring(searchName.length, c.length);\n    }\n  }\n\n  return null;\n}\n\nexport function deleteCookie(name) {\n  const domain = window.location.hostname,\n    path = \"/\"; // root path\n\n  document.cookie = [\n    name,\n    \"=\",\n    \"; expires=\" + new Date(0).toUTCString(),\n    \"; path=\" + path,\n    \"; domain=\" + domain,\n  ].join(\"\");\n}\n","import { reloadPage } from './helpers';\nimport changeCartBlock from './changeCartBlock';\n\nexport default function removeItemFromCart(\n  api,\n  id,\n  cart,\n  total,\n  row,\n  rowId,\n  elemTotal\n) {\n  api\n    .patchData(id, {\n      cart: [...cart.slice(0, rowId), ...cart.slice(rowId + 1)],\n      total: total,\n    })\n    .then(({ cart }) => {\n      row.parentElement.removeChild(row);\n      if (cart.length === 0) {\n        reloadPage();\n      }\n      elemTotal.innerHTML = `Total: &euro;${total}`;\n      let cartItems = 0;\n      cart.forEach((item) => (cartItems += item.quantity));\n      changeCartBlock(cartItems, total);\n    });\n}\n","import ToolsShopApi from \"./toolsShopApi\";\nimport changeCartBlock from \"./changeCartBlock\";\nimport { login } from \"./auth/checkLoggied\";\nimport { reloadPage } from \"./helpers\";\nimport displayMessage from \"./displayMessage\";\nimport removeItemFromCart from \"./removeItemFromCart\";\nimport updateQuantityItem from \"./updateQuantityItem\";\n\nexport default function createTableCart() {\n  const toolsShopApi = new ToolsShopApi();\n\n  if (document.querySelector(\".cart__table\")) {\n    let blockCart = document.querySelector(\".cart__table\");\n    let tableCart = document.createElement(\"table\");\n    let thead = document.createElement(\"thead\");\n    let tbody = document.createElement(\"tbody\");\n    let trTitle = document.createElement(\"tr\");\n    let titles = [\n      \"Id\",\n      \"Product name\",\n      \"Price\",\n      \"Quantity\",\n      \"Total cost\",\n      \"Action\",\n    ];\n\n    titles.forEach((title) => {\n      let th = document.createElement(\"th\");\n      th.textContent = title;\n      trTitle.append(th);\n    });\n\n    if (login) {\n      toolsShopApi.checkEmail(login).then(([user]) => {\n        const { id, cart, total, currentOrders, totalOrders } = user;\n        if (\n          typeof user != \"undefined\" &&\n          user.email === login &&\n          user.isLoggied === true\n        ) {\n          let cartItems = 0;\n          cart.forEach((item) => (cartItems += item.quantity));\n          changeCartBlock(cartItems, total);\n          if (cart.length === 0) {\n            displayMessage(\"No goods\", \"cart__table_message\", blockCart);\n          } else {\n            blockCart.append(tableCart);\n            tableCart.append(thead);\n            tableCart.append(tbody);\n            thead.append(trTitle);\n            cart.map((item, idx) => {\n              const { title, price, quantity } = item;\n              let tr = document.createElement(\"tr\");\n              let quantityElement =\n                '<i data-subtraction class=\"far fa-minus-square\"></i>' +\n                \"  <span>\" +\n                quantity +\n                \"</span>  \" +\n                '<i data-addition class=\"far fa-plus-square\"></i>';\n              let deleteElement = `<button class=\"cart__table_delete\" data-action>Delete</button>`;\n              let cells = [\n                idx + 1,\n                title,\n                price,\n                quantityElement,\n                `&euro;${price * quantity}`,\n                deleteElement,\n              ];\n              cells.forEach((cell) => {\n                let td = document.createElement(\"td\");\n                td.innerHTML = cell;\n                tr.append(td);\n              });\n              tbody.append(tr);\n            });\n            let totalCart = document.createElement(\"p\");\n            totalCart.classList.add(\"cart__table_total\");\n            totalCart.innerHTML = `Total: &euro;${total}`;\n            tableCart.after(totalCart);\n            let btnOrder = document.createElement(\"button\");\n            btnOrder.classList.add(\"cart__table_order\");\n            btnOrder.textContent = \"To Order\";\n            totalCart.after(btnOrder);\n\n            tableCart.addEventListener(\"click\", (e) => {\n              let action = e.target.dataset.action;\n              let subtraction = e.target.dataset.subtraction;\n              let addition = e.target.dataset.addition;\n\n              if (action !== undefined) {\n                let tr = e.target.closest(\"tr\");\n                let idxTr = tr.rowIndex - 1;\n                toolsShopApi.getGoodsFromCart(id).then(({ cart, total }) => {\n                  let newTotal =\n                    total - cart[idxTr].quantity * cart[idxTr].price;\n                  removeItemFromCart(\n                    toolsShopApi,\n                    id,\n                    cart,\n                    newTotal,\n                    tr,\n                    idxTr,\n                    totalCart\n                  );\n                });\n              }\n\n              if (addition !== undefined) {\n                let countItem = e.target.previousElementSibling;\n                let tr = e.target.closest(\"tr\");\n                let tdTotalCost = e.target.closest(\"td\").nextElementSibling;\n                let idxTr = tr.rowIndex - 1;\n                toolsShopApi.getGoodsFromCart(id).then(({ cart, total }) => {\n                  let newQuantity = cart[idxTr].quantity + 1;\n                  let newPrice = cart[idxTr].price * newQuantity;\n                  tdTotalCost.innerHTML = `&euro;${newPrice}`;\n                  const newCartItem = { ...cart[idxTr], quantity: newQuantity };\n                  const newCart = cart.map((item) => {\n                    if (item.id === newCartItem.id) {\n                      return newCartItem;\n                    }\n                    return item;\n                  });\n                  let newTotal = total + cart[idxTr].price;\n                  updateQuantityItem(\n                    toolsShopApi,\n                    id,\n                    newCart,\n                    newTotal,\n                    newQuantity,\n                    countItem,\n                    totalCart\n                  );\n                });\n              }\n\n              if (subtraction !== undefined) {\n                let countItem = e.target.nextElementSibling;\n                let tr = e.target.closest(\"tr\");\n                let tdTotalCost = e.target.closest(\"td\").nextElementSibling;\n                let idxTr = tr.rowIndex - 1;\n                toolsShopApi.getGoodsFromCart(id).then(({ cart, total }) => {\n                  let newQuantity = cart[idxTr].quantity - 1;\n                  let newPrice = cart[idxTr].price * newQuantity;\n                  tdTotalCost.innerHTML = `&euro;${newPrice}`;\n                  const newCartItem = { ...cart[idxTr], quantity: newQuantity };\n                  const newCart = cart.map((item) => {\n                    if (item.id === newCartItem.id) {\n                      return newCartItem;\n                    }\n                    return item;\n                  });\n                  let newTotal = total - cart[idxTr].price;\n                  if (newQuantity !== 0) {\n                    updateQuantityItem(\n                      toolsShopApi,\n                      id,\n                      newCart,\n                      newTotal,\n                      newQuantity,\n                      countItem,\n                      totalCart\n                    );\n                  } else {\n                    removeItemFromCart(\n                      toolsShopApi,\n                      id,\n                      newCart,\n                      newTotal,\n                      tr,\n                      idxTr,\n                      totalCart\n                    );\n                  }\n                });\n              }\n            });\n\n            btnOrder.addEventListener(\"click\", () => {\n              toolsShopApi\n                .patchData(id, {\n                  currentOrders: [...currentOrders, ...[cart]],\n                  totalOrders: [...totalOrders, total],\n                  cart: [],\n                  total: 0,\n                })\n                .then(() => {\n                  alert(\"Your order has been sent to the manager!\");\n                  reloadPage();\n                });\n            });\n          }\n        }\n      });\n    } else {\n      displayMessage(\n        \"Log in to add items to your cart!\",\n        \"cart__table_message\",\n        blockCart\n      );\n    }\n  }\n  return null;\n}\n","import ToolsShopApi from \"./toolsShopApi\";\nimport { login } from \"./auth/checkLoggied\";\nimport { reloadPage } from \"./helpers\";\nimport displayMessage from \"./displayMessage\";\n\nexport default function createTableOrder() {\n  const toolsShopApi = new ToolsShopApi();\n\n  if (login && document.querySelector(\".order__tables\")) {\n    const blockOrder = document.querySelector(\".order__tables\");\n\n    toolsShopApi.checkEmail(login).then(([user]) => {\n      const { id, currentOrders, totalOrders } = user;\n      if (\n        typeof user != \"undefined\" &&\n        user.email === login &&\n        user.isLoggied === true\n      ) {\n        if (currentOrders.length === 0) {\n          displayMessage(\"No Orders\", \"order__tables_message\", blockOrder);\n        } else {\n          for (let i = 0; i < currentOrders.length; i++) {\n            let tableOrder = document.createElement(\"table\");\n            let thead = document.createElement(\"thead\");\n            let tbody = document.createElement(\"tbody\");\n            let trTitle = document.createElement(\"tr\");\n            let titles = ['Id', 'Product name', 'Price', 'Quantity', 'Total coast'];\n\n            titles.forEach((title) => {\n              let th = document.createElement(\"th\");\n              th.textContent = title;\n              trTitle.append(th);\n            });\n\n            blockOrder.append(tableOrder);\n            tableOrder.append(thead);\n            tableOrder.append(tbody);\n            thead.append(trTitle);\n            currentOrders[i].map((item, idx) => {\n              const { title, price, quantity } = item;\n              let tr = document.createElement(\"tr\");\n              let cells = [\n                idx + 1,\n                title,\n                `&euro;${price}`,\n                quantity,\n                `&euro;${price * quantity}`,\n              ];\n              cells.forEach((cell) => {\n                let td = document.createElement(\"td\");\n                td.innerHTML = cell;\n                tr.append(td);\n              });\n              tbody.append(tr);\n            });\n            let totalCart = document.createElement(\"p\");\n            totalCart.classList.add(\"order__tables_total\");\n            totalCart.innerHTML = `Total: &euro;${totalOrders[i]}`;\n            tableOrder.after(totalCart);\n            let btnOrder = document.createElement(\"button\");\n            btnOrder.classList.add(\"cart__table_order\");\n            btnOrder.textContent = \"Cancel the order\";\n            totalCart.after(btnOrder);\n\n            btnOrder.addEventListener(\"click\", () => {\n              toolsShopApi\n                .patchData(id, {\n                  currentOrders: [\n                    ...currentOrders.slice(0, i),\n                    ...currentOrders.slice(i + 1),\n                  ],\n                  totalOrders: [\n                    ...totalOrders.slice(0, i),\n                    ...totalOrders.slice(i + 1),\n                  ],\n                  cart: [],\n                  total: 0,\n                })\n                .then(() => {\n                  alert(\"Your order has been canceled!\");\n                  reloadPage();\n                });\n            });\n          }\n        }\n      }\n    });\n  }\n  return null;\n}\n","export default class ToolsShopApi {\n  constructor() {\n    this._apiBase = `http://localhost:3000/`;\n    this.getResource = this.getResource.bind(this);\n    this.checkResource = this.checkResource.bind(this);\n  }\n\n  async getResource(url) {\n    const response = await fetch(`${this._apiBase}${url}`);\n\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  getGoods() {\n    return this.getResource(`goods`);\n  }\n\n  getGoodsFromCart(id) {\n    return this.getResource(`users/${id}`);\n  }\n\n  async checkResource(url) {\n    let response = await fetch(`${this._apiBase}${url}`);\n\n    if (!response.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  checkEmail(email) {\n    return this.checkResource(`users?email=${email}`);\n  }\n\n  async patchData(id, data) {\n    let response = await fetch(`${this._apiBase}users/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        `Could not fetch users/${id}, status: ${response.status}`\n      );\n    }\n\n    return await response.json();\n  }\n\n  async postUserData(data) {\n    let response = await fetch(`${this._apiBase}users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (response.ok) {\n      return response.json();\n    } else {\n      alert(\"Error HTTP: \" + response.status);\n    }\n  }\n}\n","import changeCartBlock from \"./changeCartBlock\";\n\nexport default function updateQuantityItem(\n  api,\n  id,\n  cart,\n  total,\n  quantity,\n  elemCount,\n  elemTotal\n) {\n  api\n    .patchData(id, {\n      cart: cart,\n      total: total,\n    })\n    .then(({ cart }) => {\n      elemCount.textContent = `${quantity}`;\n      elemTotal.innerHTML = `Total: &euro;${total}`;\n      let cartItems = 0;\n      cart.forEach((item) => (cartItems += item.quantity));\n      changeCartBlock(cartItems, total);\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import createCartHeaderBlock from './cartHearderBlock';\nimport checkLoggied from './auth/checkLoggied';\nimport passSingIn from './auth/passSingIn';\nimport passSingUp from './auth/passSingUp';\nimport createGridGoods from './gridGoods';\nimport createTableCart from './tableCart';\nimport createTableOrder from './tableOrder';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n  createCartHeaderBlock();\n  checkLoggied();\n  passSingIn();\n  passSingUp();\n  createGridGoods();\n  createTableCart();\n  createTableOrder();\n\n});\n"],"sourceRoot":""}